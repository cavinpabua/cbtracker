const week=7,month=30,gasCost=82e-5,$table=$("#table-result tbody");async function testSimulate(){$("#btn-simulate").prop("disabled",!0);const t=$("#combat-character").val(),e=$("#combat-weapon").val(),a=$("#combat-stamina").val();$table.html("");try{if(!t)throw Error("Please enter a character.");if(!e)throw Error("Please enter a weapon.");if(!a)throw Error("Please select a stamina multiplier.");$table.html('<tr><td class="text-white text-center" colspan="13">Calculating....</span></tr>');const s=await fetchFightGasOffset(),r=await fetchFightBaseline(),n=characterFromContract(t,await getCharacterData(t)),l=weaponFromContract(e,await getWeaponData(e)),c=await characterTargets(t,e),o=await getEnemyDetails(c),i=await Promise.all(o.map(async t=>{const e=getAlignedCharacterPower(n,l);return{enemy:t,skill:fromEther(await usdToSkill(web3.utils.toBN(Number(s)+Number(r)*Math.sqrt(parseInt(t.power)/1e3)*parseInt(a)))),exp:Math.floor(t.power/e*32)*parseInt(a)}}));let d=0,m=0,p=0,w=0;i.forEach(t=>{const e=Number(t.skill),a=Number(t.exp);0===d&&(d=e),e>m&&(m=e),e<d&&(d=e),0===p&&(p=a),a>w&&(w=a),a<p&&(p=a)}),$table.html("");for(let t=parseInt(288/(40*a));t>0;t--)$table.append(` <tr>\n                                <td class="text-white">${t}</td>\n                                <td class="text-success">${parseFloat(d*t).toFixed(6)}</td>\n                                <td class="text-success">${parseFloat(m*t).toFixed(6)}</td>\n                                <td class="text-warning">${parseInt(p*t)}</td>\n                                <td class="text-warning">${parseInt(w*t)}</td>\n                                <td class="text-success">${parseFloat(d*t*week).toFixed(6)}</td>\n                                <td class="text-success">${parseFloat(m*t*week).toFixed(6)}</td>\n                                <td class="text-warning">${parseInt(p*t*week)}</td>\n                                <td class="text-warning">${parseInt(w*t*week)}</td>\n                                <td class="text-success">${parseFloat(d*t*month).toFixed(6)}</td>\n                                <td class="text-success">${parseFloat(m*t*month).toFixed(6)}</td>\n                                <td class="text-warning">${parseInt(p*t*month)}</td>\n                                <td class="text-warning">${parseInt(w*t*month)}</td>\n                            </tr>`);$("#btn-simulate").removeAttr("disabled")}catch(t){alert(t.message),$("#btn-simulate").removeAttr("disabled")}}